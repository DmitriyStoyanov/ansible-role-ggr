---
# tasks file for go-grid-router
- name: Load a system variables file based on distribution or OS family
  include_vars: '{{ distribution }}'
  with_first_found:
    - '{{ ansible_os_family }}.yml'
    - default.yml
  loop_control:
    loop_var: distribution

- name: Configure and install packages for current OS
  include_tasks: '{{ platform_tasks }}'
  with_first_found:
    - files:
        - '{{ ansible_distribution }}.yml'
        - '{{ ansible_os_family }}.yml'
        - not-supported.yml
      ignore: true
  loop_control:
    loop_var: platform_tasks

- name: Become block
  block:
    - name: Install setuptools
      apt:
        name: python-setuptools
        update_cache: true
      register: installed_packages
      until: installed_packages is succeeded
      when: ansible_os_family == "Debian"

    - name: Install requirements
      package:
        name: '{{ ggr_requirements }}'
        state: present
      register: installed_packages
      until: installed_packages is succeeded

    - name: Install passlib
      pip:
        name: passlib
        state: present
      register: installed_packages
      until: installed_packages is succeeded

    - name: Creating user for daemons
      user:
        name: '{{ ggr_user }}'
        create_home: true
        home: '{{ home_ggr }}'
        comment: Go Grid Router user
        shell: /usr/sbin/nologin
        state: present

    - name: Setup directories
      file:
        path: '{{ home_ggr }}/{{ ggr_dir_item }}'
        state: directory
        mode: 0775
        owner: '{{ ggr_user }}'
        group: '{{ ggr_user }}'
      loop: '{{ ggr_components }}'
      loop_control:
        loop_var: ggr_dir_item

    - name: Download Go Grid Router, Go Grid Router UI, Selenoid UI
      get_url:
        url: '{{ item.base_url }}/{{ item.version }}/{{ item.key }}_linux_amd64'
        dest: '{{ item.dest }}'
        mode: 0775
        owner: '{{ ggr_user }}'
        group: '{{ ggr_user }}'
      loop:
        - key: ggr
          base_url: https://github.com/aerokube/ggr/releases/download
          dest: '{{ home_ggr }}/go-grid-router/ggr'
          version: 1.6.4
        - key: ggr-ui
          base_url: https://github.com/aerokube/ggr-ui/releases/download
          dest: '{{ home_ggr }}/go-grid-router/ggr-ui'
          version: 1.1.2
        - key: selenoid-ui
          base_url: https://github.com/aerokube/selenoid-ui/releases/download
          dest: '{{ home_ggr }}/go-grid-router/selenoid-ui'
          version: 1.8.0

    - name: Create systemd file ggr
      template:
        src: '{{ item }}.j2'
        dest: '{{ ggr_start_script_path }}{{ item }}'
        owner: '{{ ggr_user }}'
        group: '{{ ggr_user }}'
        mode: 0774
      loop: '{{ ggt_init_script }}'
      notify:
        - Reload systemd configuration
        - Restart {{ item }}

    - name: Configure Go Grid Router quota
      copy:
        dest: '{{ home_ggr }}/go-grid-router/quota'
        src: '{{ role_path }}/files/{{ item }}'
        mode: 0664
        owner: '{{ ggr_user }}'
        group: '{{ ggr_user }}'
      loop: '{{ ggr_config }}'

    - name: Configure Go Grid Router users
      htpasswd:
        path: '{{ home_ggr }}/go-grid-router/users.htpasswd'
        name: '{{ item.key }}'
        password: '{{ item.value }}'
        owner: '{{ ggr_user }}'
        group: '{{ ggr_user }}'
        mode: 0640
      loop:
        - key: ggr-users
          value: 'SuperSecretPass098123'
        - key: health
          value: 'health'

#    - name: started ggr services systemd
#      systemd:
#        state: started
#        enabled: true
#        name: '{{ ggr_service_item }}'
#      loop:
#        - selenoid-ui
#        - ggr
#        - ggr-ui
#      loop_control:
#        loop_var: ggr_service_item
  become: true
